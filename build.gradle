/*
 * Copyright 2015-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        maven {
            url 'https://sonatype.netifiinc.com/repository/netifi-plugin-group/'
            credentials {
                username = "${netifiReadOnlyUsername}"
                password = "${netifiReadOnlyPassword}"
            }
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.9.3'
        classpath 'tane.mahuta.build:gradle-plugin-version:2.0.3'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE'
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'tane.mahuta.gradle.semver-branch-plugin'

repositories {
    maven {
        url 'https://sonatype.netifiinc.com/repository/maven-central/'
        credentials {
            username = "${netifiReadOnlyUsername}"
            password = "${netifiReadOnlyPassword}"
        }
    }
    maven {
        url 'https://sonatype.netifiinc.com/repository/jcenter/'
        credentials {
            username = "${netifiReadOnlyUsername}"
            password = "${netifiReadOnlyPassword}"
        }
    }
    maven {
        url 'https://sonatype.netifiinc.com/repository/spring-release/'
        credentials {
            username = "${netifiReadOnlyUsername}"
            password = "${netifiReadOnlyPassword}"
        }
    }
    maven {
        url 'https://sonatype.netifiinc.com/repository/spring-milestone/'
        credentials {
            username = "${netifiReadOnlyUsername}"
            password = "${netifiReadOnlyPassword}"
        }
    }
    maven {
        url 'https://sonatype.netifiinc.com/repository/sonatype-oss-releases/'
        credentials {
            username = "${netifiReadOnlyUsername}"
            password = "${netifiReadOnlyPassword}"
        }
    }
    maven {
        url 'https://sonatype.netifiinc.com/repository/netifi-oss/'
        credentials {
            username = "${netifiReadOnlyUsername}"
            password = "${netifiReadOnlyPassword}"
        }
    }
}

dependencyManagement {
    dependencies {
        dependency "io.rsocket:rsocket-core:${rsocketVersion}"
        dependency "io.rsocket:rsocket-load-balancer:${rsocketVersion}"
        dependency "io.rsocket:rsocket-micrometer:${rsocketVersion}"
        dependency "io.rsocket:rsocket-test:${rsocketVersion}"
        dependency "io.rsocket:rsocket-transport-netty:${rsocketVersion}"
        dependency "io.rsocket:rsocket-transport-local:${rsocketVersion}"

        dependency "io.rsocket.rpc:rsocket-rpc-core:${rsocketRpcVersion}"
        dependency "io.rsocket.rpc:rsocket-rpc-metrics-idl:${rsocketRpcVersion}"
        dependency "io.rsocket.rpc:rsocket-rpc-protobuf:${rsocketRpcVersion}"
        dependency "io.rsocket.rpc:rsocket-rpc-protobuf-idl:${rsocketRpcVersion}"
    }
}

publishing {
    publications {
        mavenBom(MavenPublication) {
            pom {
                name = 'Proteus RSocket Java BOM'
                description = 'Bill of materials to make sure a consistent set of versions is used for Rsocket-Java.'
                url = 'https://www.netifi.com'

                organization {
                    name = 'Netifi, Inc.'
                    url = 'https://www.netifi.com'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                scm {
                    url = 'https://github.com/netifi-proteus/proteus-rsocket-bom'
                    connection = 'scm:git:git://github.com/netifi-proteus/proteus-rsocket-bom'
                    developerConnection = 'scm:git:git://github.com/netifi-proteus/proteus-rsocket-bom'
                }

                issueManagement {
                    system = "GitHub Issues"
                    url = "https://github.com/netifi-proteus/proteus-rsocket-bom/issues"
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://sonatype.netifiinc.com/repository/netifi-maven-snapshots/'
            credentials {
                username = "${netifiPublishUsername}"
                password = "${netifiPublishPassword}"
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://artifactory.netifiinc.com/artifactory'

        repository {
            repoKey = version.qualifier == 'SNAPSHOT' ? 'libs-snapshot-local' : 'libs-release-local'
            username = "${netifiArtifactoryUsername}"
            password = "${netifiArtifactoryPassword}"
        }

        defaults {
            publications('mavenBom')
        }
    }
}

bintray {
    user = "${bintrayUser}"
    key = "${bintrayKey}"
    publications = ['mavenBom']
    publish = true
    override = true
    pkg {
        repo = 'netifi-oss'
        name = project.name
        userOrg = 'netifi'
        desc = 'Bill of materials to make sure a consistent set of versions is used for Rsocket-Java.'
        websiteUrl = 'https://github.com/netifi-proteus/proteus-rsocket-bom'
        issueTrackerUrl = 'https://github.com/netifi-proteus/proteus-rsocket-bom/issues'
        vcsUrl = 'https://github.com/netifi-proteus/proteus-rsocket-bom.git'
        licenses = ['Apache-2.0']
        githubRepo = 'netifi-proteus/proteus-rsocket-bom'
        githubReleaseNotesFile = 'CHANGELOG.md'

        version {
            name = "$project.version".toString()
        }
    }
}

task clean {
    delete rootProject.buildDir
}

task printVersion {
    println project.version
}